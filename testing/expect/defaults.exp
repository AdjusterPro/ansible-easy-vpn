#!/usr/bin/expect -f
set timeout -1
set env(TERM) vt100
spawn bash $::env(HOME)/ansible-easy-vpn/bootstrap.sh


#process to parse command line arguments into OPTS array
proc parseargs {argc argv} {
    global OPTS
    foreach {key val} $argv {
        switch -exact -- $key {
            "--username"   { set OPTS(username)   $val }
            "--password"   { set OPTS(password)   $val }
            "--duckdns_domain"   { set OPTS(duckdns_domain)   $val }
            "--smtp_server"   { set OPTS(smtp_server)   $val }
            "--smtp_login"   { set OPTS(smtp_login)   $val }
            "--smtp_password"   { set OPTS(smtp_password)   $val }
        }
    }
}
parseargs $argc $argv


expect -re ".*Username.*"
send -- "$OPTS(username)\r"

expect -re ".*Password.*"

send -- "$OPTS(password)\r"

expect -re ".*Repeat password:.*"
send -- "$OPTS(password)\r"

expect -re ".*Domain name:.*"
send -- "$OPTS(duckdns_domain).duckdns.org\r"

expect  {
	"*does not resolve*" { error "Domain does not resolve to the IP" }
	"*OK*" { send -- "" }
}

expect {
  "*Are you running this script on an AWS EC2 instance?*" {
    send -- "y\r"
    exp_continue
  }
  "*if you want to generate a new SSH key pair*" {
    send -- "n\r"
  }
}

expect -re ".*Set up e-mail?.*"
send -- "y\r"

expect -re ".*SMTP server: .*"
send -- "$OPTS(smtp_server)\r"

expect -re ".*SMTP port.*"
send -- "\r"

expect -re ".*SMTP login:.*"
send -- "$OPTS(smtp_login)\r"

expect -re ".*SMTP password:.*"
send -- "$OPTS(smtp_password)\r"

expect -re ".*'From' e-mail.*"
send -- "\r"

expect -re ".*'To' e-mail.*"
send -- "\r"

expect -re ".*New Vault password:.*"
send -- "$OPTS(password)\r"

expect -re ".*Confirm New Vault password:.*"
send -- "$OPTS(password)\r"

expect "*Would you like to run the playbook now*"
send -- "y\r"

expect "*Vault password"
send -- "$OPTS(password)\r"

interact

